name: CMake

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build-macos:
    runs-on: macos-11

    steps:
    - uses: actions/checkout@v2

    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Install dependencies
      run: |
        brew update
        brew install libsamplerate

    - name: Configure CMake
      run: cmake -B code/build -S code -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build code/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/code/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Prepare Archive
      working-directory: ${{github.workspace}}
      run: ./code/scripts/package_macos_artifacts.sh

    - name: Archive all applications
      uses: actions/upload-artifact@v2
      with:
        path: code/build/artifacts/

  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Install dependencies
      run: |
         sudo apt update
         sudo apt install libasound2-dev libjack-jackd2-dev \
         ladspa-sdk \
         libcurl4-openssl-dev  \
         libfreetype6-dev \
         libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev \
         libwebkit2gtk-4.0-dev \
         libglu1-mesa-dev mesa-common-dev
         sudo apt-get update
         sudo apt-get install libsamplerate-dev

    - name: Configure CMake
      run: cmake -B code/build -S code -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build code/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/code/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Prepare Archive
      working-directory: ${{github.workspace}}
      run: ./code/scripts/package_ubuntu_artifacts.sh

    - name: Archive all applications
      uses: actions/upload-artifact@v2
      with:
        path: code/build/artifacts/
